% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/shinyga_macros.R
\name{doAuthMacro}
\alias{doAuthMacro}
\title{Quick setup of shinyGA authentication}
\usage{
doAuthMacro(input, output, session, securityCode, client.id, client.secret,
  type = "analytics")
}
\arguments{
\item{input}{Shiny input object.}

\item{output}{Shiny output object.}

\item{session}{Shiny session object.}

\item{securityCode}{A unique session code, such as from createCode()}

\item{client.id}{The client ID taken from the Google API Console.}

\item{client.secret}{The client secret taken from the Google API Console.}

\item{type}{Type of Google Authentication. c("analytics", "gspreadr")}
}
\value{
For gspreadr:


For Analytics:

A named list. See example for uses in shinyServer().
\describe{
  \item{token}{Google Authentication Token needed for API calls.}
  \item{table}{Table of Google Analytics Profiles needed for \code{\link{rollupGA}}.}
}

It also outputs the link users need to click on to authenticate as output$AuthGAURL.
Put this in your ui.r somewhere by using uiOutput("AuthGAURL")

For Analytics, the function will also create the outputs for an authentication menu.
The user needs to choose their Account, Web Property and View for the GA API to work.
The menu outputs are per the defaults of \code{\link{renderAuthDropdownRow}}

Also outputs a DataTable called 'output$GAProfile' for use in ui.r as renderDataTable('GAProfile')
}
\description{
This function calls all the other authentication functions so you can quick start.
Sacrifices customisation for speed.
}
\examples{
\dontrun{

securityCode <- createCode()

shinyServer(function(input, output, session)){

  ## returns list of token and profile.table
  ## client info taken from Google API console.
  auth <- doAuthMacro(input, output, session,
                      securityCode,
                      client.id     = "xxxxx.apps.googleusercontent.com",
                      client.secret = "xxxxxxxxxxxx"
                      )

  ga.token         <- auth$token
  profile.table    <- auth$table

  ## call the token for API calls

  gadata <- reactive({

    rollupGA(GAProfileTable = profile.table(),
             dimensions     = 'ga:date',
             start_date     = '2014-03-13',
             end_date       = '2015-03-13'
             metrics        = 'ga:sessions',
             ga             = ga.token())
                 })

  }
}
}
\seealso{
Authentication macros \code{\link{renderAuthDropdownRow}} and \code{\link{authDropdownRow}}

Other authentication functions: \code{\link{authReturnCode}};
  \code{\link{createCode}};
  \code{\link{shinygaGetTokenURL}};
  \code{\link{shinygaGetToken}}
}

