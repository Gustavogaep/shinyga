% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/shinyga_auth.R
\name{shinygaGetToken}
\alias{shinygaGetToken}
\title{Returns the authentication Token}
\usage{
shinygaGetToken(code, client.id = CLIENT_ID, client.secret = CLIENT_SECRET,
  redirect.uri = CLIENT_URL)
}
\arguments{
\item{code}{The code passed from AuthCode().}

\item{client.id}{The client ID taken from the Google API Console.}

\item{client.secret}{The client secret taken from the Google API Console.}

\item{redirect.uri}{The URL of where your Shiny application sits, that will read state parameter.}
}
\value{
The token from Google that authenticates future API calls.
}
\description{
Once a user browses to ShinyGetTokenURL and is redirected back with request
shinygaGetToken takes that code and returns a token needed for Google APIs
Uses the same client.id and client.secret as ShinyGetTokenURL
}
\examples{
\dontrun{
securityCode <- paste0(sample(c(1:9, LETTERS, letters), 20, replace = T), collapse='')
shinyServer(function(input, output, session)){

  AuthCode <- reactive({

      authReturnCode(session, securityCode)

  })

  output$AuthGAURL <- renderUI({

       a("Click Here to Authorise Your Google Analytics Access",
          href=ShinyGetTokenURL(securityCode)
          )
       })

  AccessToken <- reactive({
      validate(
        need(AuthCode(), "Authenticate To See")
      )

      access_token <- ShinyGetToken(code = AuthCode())

      token <- access_token$access_token

    })
}
}
}
\seealso{
Other authentication functions: \code{\link{authReturnCode}};
  \code{\link{shinygaGetTokenURL}}
}

