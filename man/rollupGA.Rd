% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/shinyga_fetchdata.R
\name{rollupGA}
\alias{rollupGA}
\title{rollupGA - get GA data from multiple Views}
\usage{
rollupGA(GAProfileTable, sort = "", max_results = -1,
  dimensions = "ga:date", start_date = "2013-02-01", start_index = 1,
  metrics = "ga:visits,ga:transactionRevenue", filters = "", segment = "",
  end_date = "2013-02-01", walk = FALSE, ga = someGAtoken)
}
\arguments{
\item{GAProfileTable}{Table of property Ids, generated from}

\item{sort}{Sort the results before returning data}

\item{dimensions}{Dimensions called, in GA API format (e.g. ga:date, ga:source)}

\item{metrics}{Metrics called, in GA API format (e.g. ga:visits,ga:pageviews)}

\item{filters}{Filters of data}

\item{segment}{Any segments}

\item{walk}{If results are sampled, whether to do daily fetches to avoid sampling}

\item{ga}{The token needed to fetch the data}

\item{start.date}{Start date of data fetch}

\item{end.date}{End date of data fetch}

\item{fields}{What fields from the API should be returned}

\item{start}{What start index of the data, used for walking through big results}

\item{max}{Maximum number of results to fetch}

\item{date.format}{Date format of results}

\item{messages}{Feedback messages}

\item{batch}{If results over 10000 limit, whether to batch them}

\item{output.raw}{Whether the results should be outputed not parsed into data.frame}

\item{output.formats}{Formats of data output}

\item{return.url}{Whether to return a URL}

\item{rbr}{Row by Row setting, will return NAs for empty rows}

\item{envir}{Which environment the data will be}
}
\value{
A dataframe of GA data with the GA View specified in a column.
}
\description{
If you have multiple GA views in GAProfileTable (from getAndMergeGAAccounts() )
will walk through results for all of them.
}
\examples{
\dontrun{
 chartData <- reactive({
     validate(
       need(ShinyMakeGAProfileTable(), "Need Profiles"),
       need(input$menuSeg != "", "Need Segment"),
       need(input$metric_choice != "", "Need Metric"),
       need(datePeriod(), "Need Dates")
     )

   data <- ShinyMakeGAProfileTable()

   token <- AccessToken()
   start <- input$range_date[1]
   end   <- input$range_date[2]
   segment_choice <- as.character(input$menuSeg)
   gaid <- as.character(input$view)
   metric_choice <- as.character(input$metric_choice)

   profileRow <- df[df$id == gaid,]
   d_dates <- as.character(datePeriod())

 data <- rollupGA(GAProfileTable = profileRow,
                  sort = d_dates,
                  max_results = -1,
                  dimensions = d_dates,
                  start_date = start,
                  start_index = 1,
                  metrics = paste0('ga:',metric_choice),
                  filters = '',
                  segment = segment_choice,
                  end_date = end,
                  walk = FALSE,
                  ga = token)

 data

 })
 }
}
\seealso{
Refer to the dimensions and metric Google help file for more details.
\url{https://developers.google.com/analytics/devguides/reporting/core/dimsmets}

Other fetch data functions: \code{\link{MEgetData}};
  \code{\link{getAndMergeGAAccounts}};
  \code{\link{processManagementData}};
  \code{\link{shinygaGetAccounts}};
  \code{\link{shinygaGetAdWords}};
  \code{\link{shinygaGetFilters}};
  \code{\link{shinygaGetGoals}};
  \code{\link{shinygaGetProfiles}};
  \code{\link{shinygaGetSegments}};
  \code{\link{shinygaGetWebProperties}}
}

